name: Blockchain

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
# Disable ubuntu since for some reason size of the the vcpkg cache size for this
# platform is over 4 GB
#        platform: [windows-2019, ubuntu-20.04, macos-10.15]
        platform: [windows-2019, macos-10.15]
        include:
#          - platform: 'ubuntu-20.04'
#            vcpkg_triplet: 'x64-linux'
#            vcpkg_pkg_list: 'vcpkg-nonwindows'
#            cmake_extra: ''
#            vcpkg_cache: '/home/runner/.cache/vcpkg'
#            experimental: false
          - platform: 'macos-10.15'
            vcpkg_triplet: 'x64-osx'
            vcpkg_pkg_list: 'vcpkg-nonwindows'
            cmake_extra: ''
            experimental: true
            vcpkg_cache: '/Users/runner/.cache/vcpkg'
          - platform: 'windows-2019'
            vcpkg_triplet: 'x64-windows'
            vcpkg_pkg_list: 'vcpkg'
            cmake_extra: '-DOT_INSTALL_LIBRARY_DEPENDENCIES=OFF'
            experimental: false
            vcpkg_cache: 'C:\Users\runneradmin\AppData\Local\vcpkg'
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2.3.4
      with:
        fetch-depth: '0'
        submodules: 'recursive'
    - name: Get more disk space (linux)
      if: matrix.platform == 'ubuntu-20.04'
      run: |
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/share/dotnet
    - name: Get more disk space (macos)
      if: matrix.platform == 'macos-10.15'
      run: |
        sudo rm -rf /Users/runner/Library/Android
        sudo rm -rf /Library/Frameworks/Mono.framework
    - name: Install extra dependencies
      if: matrix.platform == 'ubuntu-20.04'
      run: |
          sudo apt-get update
          sudo apt-get install -y at autoconf autoconf-archive autopoint build-essential cifs-utils curl dh-autoreconf flex g++ gfortran git gperf libbison-dev libgl1-mesa-dev libgles2-mesa-dev libglu1-mesa-dev libncurses5-dev libnuma-dev libnuma1 libtool libtool libudev-dev libx11-dev libx11-xcb-dev libxaw7-dev libxcb-glx0-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-render-util0-dev libxcb-shape0-dev libxcb-shm0-dev libxcb-sync0-dev libxcb-util0-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-xinput-dev libxcb-xkb-dev libxcb1-dev libxcursor-dev libxext-dev libxfixes-dev libxi-dev libxinerama-dev libxkbcommon-dev libxkbcommon-x11-dev libxrandr-dev libxrender-dev libxt-dev make mesa-common-dev meson pkg-config python-six python-yaml python3 python3-six ruby-full tar unzip xutils-dev yasm zip
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.9
      with:
        cmake-version: '3.20.x'
    - name: Cache vcpkg
      uses: actions/cache@v2
      with:
        path: |
          ${{ matrix.vcpkg_cache }}
        key: vcpkg-${{ github.workflow }}-${{ matrix.platform }}
    - name: Run vcpkg
      uses: lukka/run-vcpkg@v7.3
      with:
        vcpkgArguments: '--triplet ${{ matrix.vcpkg_triplet }} --overlay-ports=${{ github.workspace }}/vcpkg/ports --overlay-triplets=${{ github.workspace }}/vcpkg/triplets @${{ github.workspace }}/vcpkg/${{ matrix.vcpkg_pkg_list }}.txt'
        vcpkgDirectory: '${{ github.workspace }}/deps/vcpkg'
        doNotCache: true
      continue-on-error: ${{ matrix.experimental }}
    - name: 'Compile'
      uses: lukka/run-cmake@v3.4
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        useVcpkgToolchainFile: true
        vcpkgTriplet: '${{ matrix.vcpkg_triplet }}'
        buildDirectory: '${{ github.workspace }}/build'
        cmakeAppendedArgs: '-GNinja -DCMAKE_BUILD_TYPE=Release -DOT_WITH_BLOCKCHAIN=ON -DOT_WITH_QT=ON -DOT_WITH_QML=ON -DOT_ENABLE_RPC=ON ${{ matrix.cmake_extra }}'
        buildWithCMake: true
        buildWithCMakeArgs: '-- -k 0'
      continue-on-error: ${{ matrix.experimental }}
